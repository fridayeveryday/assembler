Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 1
mlab1.asm



      1					 ;*******************************************************************************************
      2					 ********
      3					 ; MLAB1.ASM - учебный пример для выполнения
      4					 ; лабораторной	работы N1 по машинно-ориентированному программированию
      5					 ; 10.09.02: Негода В.Н.
      6					 ;*******************************************************************************************
      7					 ********
      8	    0000				 .MODEL	SMALL
      9	    0000				 .STACK	200h
     10						 .386
     11					 ;	 Используются декларации констант и макросов
     12						 INCLUDE MLAB1.INC
1    13					 ;*********************************************************
1    14					 ; Константы для учебного примера лабораторной работы N	1  *
1    15					 ; по МОП. 10.09.02: Негода В.Н.			   *
1    16					 ;*********************************************************
1    17
1    18		  = 001B		 CHESC	 = 1Bh
1    19		  = 000D		 CHCR	 = 13
1    20		  = 003D		 CHSEP	 = '='
1    21		  = 0060		 CHCOMMA = '`'
1    22		  = 000A		 CHLF	 = 10
1    23		  = 0021		 DOSFU	 = 21h
1    24		  = 0002		 FUPUTC	 = 2
1    25		  = 0008		 FUGETCH = 8
1    26		  = 000A		 FUGETS	 = 0Ah
1    27		  = 004C		 FUEXIT	 = 4Ch
1    28		  = 0000		 PAUSE_L = 0000	 ; Младшее слово стартового значения паузы
1    29		  = 0000		 PAUSE_H = 0	 ; Старшее слово
1    30		  = 0012		 LENNUM	 = 18	 ; Число символов в строке десятичного числа
1    31		  = 0009		 LENPACK = 9	 ; Упаковонное в два раза короче
1    32
1    33
     34						 INCLUDE MLAB1.MAC
1    35					 ;*********************************************************
1    36					 ; Макросы для учебного	примера	лабораторной работы N 1	   *
1    37					 ; по МОП. 10.09.02: Негода В.Н.			   *
1    38					 ;*********************************************************
1    39
1    40					 ; Макрос вывода строки	LINE
1    41					 PUTL	 MACRO LINE
1    42					   PUSH	EAX
1    43						 LEA   SI,   LINE
1    44						 XOR   CX,   CX
1    45						 XOR   DX,   DX
1    46						 XOR   AX,   AX
1    47						 CALL  PUTSS
1    48					   POP EAX
1    49						 ENDM
1    50
1    51					 ; Макрос вывода строки	LINE с задержкой PAUSE
1    52					 PUTLS	 MACRO LINE
1    53						 XOR   AX,   AX
1    54						 LEA   SI,   LINE
1    55						 MOV   DX,   PAUSE
1    56						 MOV   CX,   PAUSE+2
1    57						 CALL  PUTSS
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 2
mlab1.asm



1    58						 ENDM
1    59
1    60					 ; Как и PUTLS,	но с центрированием посередине
1    61					 PUTLSC	 MACRO LINE
1    62						 LOCAL LO, NOMARG
1    63						 LEA   SI,   LINE
1    64						 CALL  SLEN
1    65						 MOV   CX, 80
1    66						 SUB   CX, AX
1    67						 SAR   CX,  1
1    68						 JZ    NOMARG
1    69					 LO:	 MOV   AL, ' '
1    70						 CALL  PUTC
1    71						 LOOP  LO
1    72					 NOMARG: PUTLS LINE
1    73						 ENDM
1    74
1    75					 ; Макрос фиксации начала измерения времени
1    76					 ; Заносит в стек младшее слово	числа тактов системных часов
1    77					 FIXTIME MACRO
1    78						 DB	 0Fh, 31h; Команда RDTSC чтения	счетчика тактов
1    79						 PUSH	 EDX
1    80						 PUSH	 EAX
1    81						 ENDM
1    82
1    83					 ; Макрос получения в <EDX,EAX>	числа тактов, прошедших	с последнего
1    84					 ; момента фиксации времени. Извлекает продукт FIXTIME из стека
1    85					 DURAT	 MACRO
1    86						 DB	 0Fh, 31h; Команда RDTSC чтения	счетчика тактов
1    87						 POP	 EBX
1    88						 SUB	 EAX,	 EBX
1    89						 POP	 EBX
1    90						 SBB	 EDX,	 EBX
1    91						 ENDM
1    92
1    93					 ; Макрос завершения программы
1    94					 EXIT	 MACRO
1    95						 MOV	 AH, FUEXIT
1    96						 MOV	 AL, 0
1    97						 INT	 DOSFU
1    98						 ENDM
1    99
    100
    101					 ; Декларации данных
    102	    0000				 .DATA
    103	    0000  02EE*(00)		 STR_ARR DB 750	DUP (0)
    104	    02EE  0000001E		 WORD_LEN DD 30
    105	    02F2  00000000		 COUNTER DD 0
    106	    02F6  46			 MYBUF DB 70
    107	    02F7  41 42	43 44 00	 A DB 'ABCD', 0
    108	    02FC  46*(00)		 B DB 70 DUP (0)
    109	    0342  00			 EMPTYS	 DB	 0
    110					 ;========================= Программа =========================
    111	    0343				 .CODE
    112	    0000				 BEGIN	 LABEL	 NEAR
    113
    114						 ; инициализация сегментного регистра
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 3
mlab1.asm



    115	    0000  B8 0000s			 MOV	 AX,	 @DATA
    116	    0003  8E D8				 MOV	 DS,	 AX
    117	    0005  66| 33 C0		   XOR EAX, EAX
    118	    0008  A1 02F7r		   MOV EAX, A
**Error** mlab1.asm(30)	Operand	types do not match
    119
    120					   ; PUTL EMPTYS
    121					   ; LEA EDX, [MYBUF]
    122					   ; CALL GETS
    123					   ; PUTL EMPTYS
    124					   ;
    125					   ; XOR ECX, ECX
    126					   ; XOR EAX, EAX
    127					   ; XOR EBX, EBX
    128					   ; ADD EDX, 1
    129					   ; XOR ECX, ECX
    130					   ; MOV CL, [EDX]
    131					   ; MOV AL, [EDX]
    132					   ;
    133					   ; LEA DI, STR_ARR
    134					   ; MOV [DI], AL
    135					   ; INC DI
    136					   ; MOV AL, [STR_ARR]
    137					   ; CALL PUTC
    138					   ; PUTL EMPTYS
    139					   ;
    140					   ; INC DX
    141					   ; MOV AL, [EDX]
    142					   ; LEA DI, STR_ARR
    143					   ; MOV [DI + 1], AL
    144					   ; INC DI
    145					   ; MOV AL, [STR_ARR +	1]
    146					   ; CALL PUTC
    147					   ; PUTL EMPTYS
    148					   ;
    149					   ; CALL PUTC
    150
    151					   ; CMP AL, CHCR
    152					   ; JNE @@E
    153					   ; PUTL A
    154					   ; JMP @@E
    155
    156	    000B			   TREAT_STR PROC NEAR
    157	    000B  66| 33 C9		     XOR ECX, ECX
    158	    000E  66| 33 C0		     XOR EAX, EAX
    159	    0011  66| 33 DB		     XOR EBX, EBX
    160	    0014  66| 42		     INC EDX
    161	    0016  67| 8A 0A		     MOV CL, [EDX]
    162
    163
    164
    165	    0019			   TREAT_STR  ENDP
    166
    167					  ;ввод	числа Х
    168					 ;   PUTL	 EMPTYS
    169					 ;   LEA ESI, INPUT_X_STR
    170					 ;   CALL PUTSS
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 4
mlab1.asm



    171					 ;
    172					 ;   ;записать EAX в X переменную
    173					 ;   LEA EDI, X
    174					 ;   CALL READ_NUM
    175					 ;   PUTL EMPTYS
    176					 ;   ; ВЫВОД В 10 ЧНОЙ ВИДЕ ЧИСЛА
    177					 ;   MOV EAX, X
    178					 ;   CALL PRINT_DEC
    179					 ;   PUTL EMPTYS
    180					 ;
    181					 ;   ;ввод числа У
    182					 ;   ; XOR EDI,	EDI
    183					 ;   LEA ESI, INPUT_Y_STR
    184					 ;   CALL PUTSS
    185					 ;  ;записать EAX в У переменную
    186					 ;   LEA EDI, Y
    187					 ;   CALL READ_NUM
    188					 ;   PUTL EMPTYS
    189					 ;
    190					 ;   ; ВЫВОД В 10 ЧНОЙ ВИДЕ ЧИСЛА
    191					 ;   MOV EAX, Y
    192					 ;   CALL PRINT_DEC
    193					 ;   PUTL EMPTYS
    194					 ;
    195					 ;   LEA ESI, FUNCTION
    196					 ;   CALL PUTSS
    197					 ;   LEA ESI, Z_STR
    198					 ;   CALL PUTSS
    199					 ;   LEA ESI, Z3
    200					 ;   CALL PUTSS
    201					 ;   LEA ESI, Z2
    202					 ;   CALL PUTSS
    203					 ;   LEA ESI, Z7
    204					 ;   CALL PUTSS
    205					 ;
    206					 ;   ;-------------------------------------------------
    207					 ;   ; начало подсчета
    208					 ;   ; берем х1-х4 биты
    209					 ;   MOV EAX, X
    210					 ;   AND EAX, 11110b ;маска на х1-х4 бита
    211					 ;
    212					 ;   ;СРАВНИТЬ Х1-Х4 БИТА НА СООТВЕТСТВИЕ ЛЖИ ИЗ ТАБЛИЧНЫХ
    213					 ;   CMP EAX, 100b
    214					 ;   JE	FALSE
    215					 ;   CMP EAX, 1100b
    216					 ;   JE	FALSE
    217					 ;   CMP EAX, 10b
    218					 ;   JE	FALSE
    219					 ;   CMP EAX, 10010b
    220					 ;   JE	FALSE
    221					 ;   CMP EAX, 110b
    222					 ;   JE	FALSE
    223					 ;   ; ИНАЧЕ ПРЫЖОК НА ВЫОПЛЕНИЕ ЕСЛИ ЗНАЧЕНИЕ ИСТИНА ИЗ ТАБИЛЦЫ
    224					 ;   JMP TRUE
    225					 ;
    226					 ; ; вычисление	Z если истинна или ложь	соответственно
    227					 ; TRUE:
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 5
mlab1.asm



    228					 ;   LEA ESI, F1
    229					 ;   CALL PUTSS
    230					 ;   MOV EAX, X
    231					 ;   SHR EAX, 2
    232					 ;   MOV EBX, Y
    233					 ;   SHL EBX, 2
    234					 ;   ADD EAX, EBX
    235					 ;   MOV Z, EAX
    236					 ;   JMP CHANGE_Z
    237					 ; FALSE:
    238					 ;   LEA ESI, F0
    239					 ;   CALL PUTSS
    240					 ;   MOV EAX, X
    241					 ;   SHR EAX, 3
    242					 ;   MOV EBX, Y
    243					 ;   SUB EAX, EBX
    244					 ;   MOV Z, EAX
    245					 ;
    246					 ;
    247					 ;
    248					 ; CHANGE_Z:
    249					 ;   XOR ECX, ECX
    250					 ;   XOR EDX, EDX
    251					 ;   LEA ESI, Z_BEFORE_DEC
    252					 ;   CALL PUTSS
    253					 ;   MOV EAX, Z
    254					 ;   CALL PRINT_DEC
    255					 ;   PUTL EMPTYS
    256					 ;   PUTL EMPTYS
    257					 ;
    258					 ;   XOR ECX, ECX
    259					 ;   XOR EDX, EDX
    260					 ;   LEA ESI, Z_BEFORE_BIN
    261					 ;   CALL PUTSS
    262					 ;   MOV EAX, Z
    263					 ;   CALL PRINT_BIN
    264					 ;   PUTL EMPTYS
    265					 ;   PUTL EMPTYS
    266					 ;
    267					 ;
    268					 ;
    269					 ;   ; ИЗМЕНЕНИЕ 3 БИТА
    270					 ;   MOV EAX, Z
    271					 ;   XOR EAX, 1000b ; ИНВЕРСИЯ 3 БИТА
    272					 ;
    273					 ;   ;----------------------------------------
    274					 ;   ;ИЗМЕНЕНИЕ	7 БИТА
    275					 ;
    276					 ;   MOV EBX, EAX
    277					 ;   AND EBX, 10000000b	   ; МАСКА 7 БИТА
    278					 ;   SHR EBX, 7	   ; В EBX ЗНАЧЕНИЕ БИТА Z7
    279					 ;
    280					 ;   MOV ECX, EAX
    281					 ;   AND ECX, 100000000b    ; МАСКА 8 БИТА
    282					 ;   SHR ECX, 8	   ; В EBX ЗНАЧЕНИЕ БИТА Z8
    283					 ;
    284					 ;   AND EBX, ECX  ; ВЫЧИСЛЕНИЕ	Z7&=Z8
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 6
mlab1.asm



    285					 ;   SHL EBX, 7	   ; ВЫДВИГАЕМ ЗНАЧЕНИЕ	ОПЕРАЦИИ В ПОЗИЦИЮ Z7
    286					 ;   CMP EBX, 0
    287					 ;   JE	WRITE_0_Z7
    288					 ;   WRITE_1_Z7:
    289					 ;   OR	EAX, EBX  ; ЗАНЕСЕНИЕ РЕЗУЛЬТАТА EBX В EAX
    290					 ;   JMP CNT
    291					 ;   WRITE_0_Z7:
    292					 ;   OR	EBX, 10000000b	; СТАВИМ В EBX НА 7 БИТ	ЕДИНИЦУ
    293					 ;   NOT EBX
    294					 ;   AND EAX, EBX ; ЗАНЕСЕНИЕ РЕЗУЛЬТАТА EBX В EAX
    295					 ;
    296					 ;   CNT:
    297					 ;
    298					 ;   ;----------------------------------------
    299					 ;   ; ИЗМЕНЕНИЕ 2 БИТА
    300					 ;   MOV EBX, EAX
    301					 ;   AND EBX, 100b  ; маска 2 бита
    302					 ;   SHR EBX, 2	   ; В EBX ЗНАЧЕНИЕ БИТА Z2
    303					 ;
    304					 ;   MOV ECX, EAX
    305					 ;   AND ECX, 10000000000000000000b   ;	маска 19 бита
    306					 ;   SHR ECX, 19   ; В ECX ЗНАЧЕНИЕ БИТА Z19
    307					 ;
    308					 ;   OR	EBX, ECX  ; ВЫЧИСЛЕНИЕ Z2|=Z19
    309					 ;   SHL EBX, 2	   ; ВЫДВИГАЕМ ЗНАЧЕНИЕ	ОПЕРАЦИИ В ПОЗИЦИЮ Z2
    310					 ;   OR	EAX, EBX  ; ЗАНЕСЕНИЕ РЕЗУЛЬТАТА EBX В EAX
    311					 ;
    312					 ;
    313					 ;   MOV Z, EAX
    314					 ;
    315					 ;   XOR ECX, ECX
    316					 ;   XOR EDX, EDX
    317					 ;   LEA ESI, Z_AFTER_DEC
    318					 ;   CALL PUTSS
    319					 ;   MOV EAX, Z
    320					 ;   CALL PRINT_DEC
    321					 ;   PUTL EMPTYS
    322					 ;   PUTL EMPTYS
    323					 ;
    324					 ;
    325					 ;   XOR ECX, ECX
    326					 ;   XOR EDX, EDX
    327					 ;   LEA ESI, Z_AFTER_BIN
    328					 ;   CALL PUTSS
    329					 ;   MOV EAX, Z
    330					 ;   CALL PRINT_BIN
    331					 ;   PUTL EMPTYS
    332					 ;   PUTL EMPTYS
    333					 ;
    334					 ;
    335					 ; JMP @@E
    336					 ;
    337					 ; ERROR_NUM:
    338					 ;   PUTL EMPTYS
    339					 ;   LEA ESI, ERROR_NUM_STR
    340					 ;   XOR EAX, EAX
    341					 ;   XOR EDX, EDX
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 7
mlab1.asm



    342					 ;   XOR ECX, ECX
    343					 ;   CALL PUTSS
    344					 ;   JMP @@E
    345					 ;
    346					 ; ; RESULT IN EAX , STRING WITH BINARY	NUMBER IN MYBUFF
    347					 ; READ_NUM PROC NEAR
    348					 ;   LEA EDX, [MYBUF]
    349					 ;   CALL GETS
    350					 ;   xor eax, eax
    351					 ;   xor ebx, ebx
    352					 ;   ADD EDX, 1
    353					 ;   MOV CL, [EDX]
    354					 ;   ADD EDX, 1
    355					 ;   l1:
    356					 ;	mov bl,	[EDX]
    357					 ;	sub bl,	48
    358					 ;	CMP BL,	0
    359					 ;	JE CONTINUE
    360					 ;	CMP BL,	1
    361					 ;	JNE ERROR_NUM
    362					 ;	CONTINUE:
    363					 ;	  add EAX, EBX
    364					 ;	  shl EAX, 1
    365					 ;	  inc EDX
    366					 ;	 LOOP L1
    367					 ;   shr EAX,1
    368					 ; ; PUT EAX VALUE INTO	VARIABLE WITH EDI ADDRESS
    369					 ;   MOV [EDI],	EAX
    370					 ;   RET
    371					 ; READ_NUM ENDP
    372					 ;
    373					 ; ; WRITE DEC NUMBER FROM EAX
    374					 ; PRINT_DEC PROC NEAR
    375					 ;   ; PUSH EAX
    376					 ;   ; PUTL EMPTYS
    377					 ;   ; POP EAX
    378					 ;   MOV EBX, 10
    379					 ;   XOR ECX, ECX
    380					 ;   DIVISION:
    381					 ;     XOR EDX,	EDX
    382					 ;     DIV EBX
    383					 ;     ADD EDX,	48
    384					 ;     push EDX
    385					 ;     ADD ECX,	1
    386					 ;     CMP EAX,	0
    387					 ;     JG DIVISION
    388					 ;   PRINT:
    389					 ;     XOR EAX,	EAX
    390					 ;     POP EAX
    391					 ;     CALL PUTC
    392					 ;     LOOP PRINT
    393					 ;     RET
    394					 ;   PRINT_DEC ENDP
    395					 ;
    396					 ;   ; WRITE DEC NUMBER	FROM EAX
    397					 ;   PRINT_BIN PROC NEAR
    398					 ;     ; PUSH EAX
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 8
mlab1.asm



    399					 ;     ; PUTL EMPTYS
    400					 ;     ; POP EAX
    401					 ;     MOV EBX,	2
    402					 ;     XOR ECX,	ECX
    403					 ;     DIVISION_BIN:
    404					 ;	 XOR EDX, EDX
    405					 ;	 DIV EBX
    406					 ;	 ADD EDX, 48
    407					 ;	 push EDX
    408					 ;	 ADD ECX, 1
    409					 ;	 CMP EAX, 0
    410					 ;	 JG DIVISION_BIN
    411					 ;     MOV EBX,	ECX
    412					 ;     SUB EBX,	20
    413					 ;     PRINT_ZEROS:
    414					 ;	 MOV AL, '0'
    415					 ;	 CALL PUTC
    416					 ;	 INC EBX
    417					 ;	 CMP EBX, 0
    418					 ;	 JL PRINT_ZEROS
    419					 ;     PRINT_B:
    420					 ;	 XOR EAX, EAX
    421					 ;	 POP EAX
    422					 ;	 CALL PUTC
    423					 ;	 LOOP PRINT_B
    424					 ;	 RET
    425					 ;     PRINT_BIN ENDP
    426
    427						 ; Выход из программы
    428	    0019			 @@E:	 EXIT
1   429	    0019  B4 4C				 MOV	 AH, FUEXIT
1   430	    001B  B0 00				 MOV	 AL, 0
1   431	    001D  CD 21				 INT	 DOSFU
    432						 EXTRN	 PUTSS:	 NEAR
    433						 EXTRN	 PUTC:	 NEAR
    434						 EXTRN	 GETCH:	 NEAR
    435						 EXTRN	 GETS:	 NEAR
    436						 EXTRN	 SLEN:	 NEAR
    437						 EXTRN	 UTOA10: NEAR
    438						 END	 BEGIN
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 9
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/18/21"
??FILENAME			  Text	 "mlab1	  "
??TIME				  Text	 "24:33:49"
??VERSION			  Number 0205
@@E				  Near	 _TEXT:0019
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0D0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MLAB1
@MODEL				  Text	 2
@WORDSIZE			  Text	 2
A				  Byte	 DGROUP:02F7
B				  Byte	 DGROUP:02FC
BEGIN				  Near	 _TEXT:0000
CHCOMMA				  Number 0060
CHCR				  Number 000D
CHESC				  Number 001B
CHLF				  Number 000A
CHSEP				  Number 003D
COUNTER				  Dword	 DGROUP:02F2
DOSFU				  Number 0021
EMPTYS				  Byte	 DGROUP:0342
FUEXIT				  Number 004C
FUGETCH				  Number 0008
FUGETS				  Number 000A
FUPUTC				  Number 0002
GETCH				  Near	 _TEXT:---- Extern
GETS				  Near	 _TEXT:---- Extern
LENNUM				  Number 0012
LENPACK				  Number 0009
MYBUF				  Byte	 DGROUP:02F6
PAUSE_H				  Number 0000
PAUSE_L				  Number 0000
PUTC				  Near	 _TEXT:---- Extern
PUTSS				  Near	 _TEXT:---- Extern
SLEN				  Near	 _TEXT:---- Extern
STR_ARR				  Byte	 DGROUP:0000
TREAT_STR			  Near	 _TEXT:000B
UTOA10				  Near	 _TEXT:---- Extern
WORD_LEN			  Dword	 DGROUP:02EE

Macro Name

DURAT
EXIT
FIXTIME
PUTL
PUTLS
PUTLSC
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 10
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0200 Para	  Stack	  STACK
  _DATA				  16  0343 Word	  Public  DATA
_TEXT				  16  001F Word	  Public  CODE
Turbo Assembler	 Version 2.51	     04/18/21 24:33:49	    Page 11
Error Summary



**Error** mlab1.asm(30)	Operand	types do not match
