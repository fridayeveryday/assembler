Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 1
mlab1.asm



      1					 ;*******************************************************************************************
      2					 ********
      3					 ; MLAB1.ASM - учебный пример для выполнения
      4					 ; лабораторной	работы N1 по машинно-ориентированному программированию
      5					 ; 10.09.02: Негода В.Н.
      6					 ;*******************************************************************************************
      7					 ********
      8	    0000				 .MODEL	SMALL
      9	    0000				 .STACK	200h
     10						 .386
     11					 ;	 Используются декларации констант и макросов
     12						 INCLUDE MLAB1.INC
1    13					 ;*********************************************************
1    14					 ; Константы для учебного примера лабораторной работы N	1  *
1    15					 ; по МОП. 10.09.02: Негода В.Н.			   *
1    16					 ;*********************************************************
1    17
1    18		  = 001B		 CHESC	 = 1Bh
1    19		  = 000D		 CHCR	 = 13
1    20		  = 003D		 CHSEP	 = '='
1    21		  = 0060		 CHCOMMA = '`'
1    22		  = 000A		 CHLF	 = 10
1    23		  = 0021		 DOSFU	 = 21h
1    24		  = 0002		 FUPUTC	 = 2
1    25		  = 0008		 FUGETCH = 8
1    26		  = 000A		 FUGETS	 = 0Ah
1    27		  = 004C		 FUEXIT	 = 4Ch
1    28		  = 0000		 PAUSE_L = 0000	 ; Младшее слово стартового значения паузы
1    29		  = 0000		 PAUSE_H = 0	 ; Старшее слово
1    30		  = 0012		 LENNUM	 = 18	 ; Число символов в строке десятичного числа
1    31		  = 0009		 LENPACK = 9	 ; Упаковонное в два раза короче
1    32
1    33
     34						 INCLUDE MLAB1.MAC
1    35					 ;*********************************************************
1    36					 ; Макросы для учебного	примера	лабораторной работы N 1	   *
1    37					 ; по МОП. 10.09.02: Негода В.Н.			   *
1    38					 ;*********************************************************
1    39
1    40					 ; Макрос вывода строки	LINE
1    41					 PUTL	 MACRO LINE
1    42					   PUSH	EAX
1    43						 LEA   SI,   LINE
1    44						 XOR   CX,   CX
1    45						 XOR   DX,   DX
1    46						 XOR   AX,   AX
1    47						 CALL  PUTSS
1    48					   POP EAX
1    49						 ENDM
1    50
1    51					 ; Макрос вывода строки	LINE с задержкой PAUSE
1    52					 PUTLS	 MACRO LINE
1    53						 XOR   AX,   AX
1    54						 LEA   SI,   LINE
1    55						 MOV   DX,   PAUSE
1    56						 MOV   CX,   PAUSE+2
1    57						 CALL  PUTSS
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 2
mlab1.asm



1    58						 ENDM
1    59
1    60					 ; Как и PUTLS,	но с центрированием посередине
1    61					 PUTLSC	 MACRO LINE
1    62						 LOCAL LO, NOMARG
1    63						 LEA   SI,   LINE
1    64						 CALL  SLEN
1    65						 MOV   CX, 80
1    66						 SUB   CX, AX
1    67						 SAR   CX,  1
1    68						 JZ    NOMARG
1    69					 LO:	 MOV   AL, ' '
1    70						 CALL  PUTC
1    71						 LOOP  LO
1    72					 NOMARG: PUTLS LINE
1    73						 ENDM
1    74
1    75					 ; Макрос фиксации начала измерения времени
1    76					 ; Заносит в стек младшее слово	числа тактов системных часов
1    77					 FIXTIME MACRO
1    78						 DB	 0Fh, 31h; Команда RDTSC чтения	счетчика тактов
1    79						 PUSH	 EDX
1    80						 PUSH	 EAX
1    81						 ENDM
1    82
1    83					 ; Макрос получения в <EDX,EAX>	числа тактов, прошедших	с последнего
1    84					 ; момента фиксации времени. Извлекает продукт FIXTIME из стека
1    85					 DURAT	 MACRO
1    86						 DB	 0Fh, 31h; Команда RDTSC чтения	счетчика тактов
1    87						 POP	 EBX
1    88						 SUB	 EAX,	 EBX
1    89						 POP	 EBX
1    90						 SBB	 EDX,	 EBX
1    91						 ENDM
1    92
1    93					 ; Макрос завершения программы
1    94					 EXIT	 MACRO
1    95						 MOV	 AH, FUEXIT
1    96						 MOV	 AL, 0
1    97						 INT	 DOSFU
1    98						 ENDM
1    99
    100
    101					 ; Декларации данных
    102	    0000				 .DATA
    103	    0000  02EE*(00)		 STR_ARR DB 750	DUP (0)
    104	    02EE  0000001E		 WORD_LEN DD 30
    105	    02F2  00000000		 COUNTER_STR_ARR DD 0
    106	    02F6  00000000		 COUNTER_LINE DD 0
    107	    02FA  00000000		 COUNTER_4_OUT DD 0
    108	    02FE  00000019		 MAX_STR_ARR DD	25
    109	    0302  0000000A		 MAX_STR DD 10
    110	    0306  46			 MYBUF DB 70
    111	    0307  41 42	43 44 00	 A DB 'ABCD', 0
    112	    030C  46*(00)		 B DB 70 DUP (0)
    113	    0352  00			 EMPTYS	 DB	 0
    114	    0353  80*(00)		 EM db 128 dup(0)
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 3
mlab1.asm



    115	    03D3  50 4C	45 41 53 45 20+	 INPUT DB 'PLEASE INPUT	10 STRINGS OF WORDS:', 0
    116		  49 4E	50 55 54 20 31+
    117		  30 20	53 54 52 49 4E+
    118		  47 53	20 4F 46 20 57+
    119		  4F 52	44 53 3A 00
    120					 ;========================= Программа =========================
    121	    03F5				 .CODE
    122	    0000				 BEGIN	 LABEL	 NEAR
    123
    124						 ; инициализация сегментного регистра
    125	    0000  B8 0000s			 MOV	 AX,	 @DATA
    126	    0003  8E D8				 MOV	 DS,	 AX
    127
    128	    0005  66| 33 C9		   XOR ECX, ecx
    129	    0008  66| 33 D2		   XOR EDX, EDX
    130	    000B  66| 8D 36 03D3r	   LEA ESI, INPUT
    131	    0010  E8 0000e		   CALL	PUTSS
    132
    133	    0013			   TREAT_LINE:
    134	    0013  66| A1 02F6r		     MOV EAX, COUNTER_LINE
    135	    0017  66| 8B 1E 0302r	     MOV EBX, MAX_STR
    136	    001C  66| 3B C3		     CMP EAX, EBX
    137	    001F  7D 41	90 90		     JGE PRINT_ARR
    138
    139	    0023  66| 8D 16 0306r	     LEA EDX, [MYBUF]
    140	    0028  E8 0000e		     CALL GETS
    141	    002B  E8 0080		     CALL TREAT_STR
    142
    143					     PUTL EMPTYS
1   144	    002E  66| 50		   PUSH	EAX
1   145	    0030  BE 0352r			 LEA   SI,   EMPTYS
1   146	    0033  33 C9				 XOR   CX,   CX
1   147	    0035  33 D2				 XOR   DX,   DX
1   148	    0037  33 C0				 XOR   AX,   AX
1   149	    0039  E8 0000e			 CALL  PUTSS
1   150	    003C  66| 58		   POP EAX
    151	    003E  66| 8B 0E 02F6r	     MOV ECX, COUNTER_LINE
    152	    0043  66| 41		     INC ECX
    153	    0045  66| 89 0E 02F6r	     MOV COUNTER_LINE, ECX
    154
    155	    004A  66| 33 C9		     XOR ECX, ECX
    156	    004D  66| 33 D2		     XOR EDX, EDX
    157
    158	    0050  EB C1			     JMP TREAT_LINE
    159
    160
    161	    0052			   OUTPUT:
    162					   PUTL	EMPTYS
1   163	    0052  66| 50		   PUSH	EAX
1   164	    0054  BE 0352r			 LEA   SI,   EMPTYS
1   165	    0057  33 C9				 XOR   CX,   CX
1   166	    0059  33 D2				 XOR   DX,   DX
1   167	    005B  33 C0				 XOR   AX,   AX
1   168	    005D  E8 0000e			 CALL  PUTSS
1   169	    0060  66| 58		   POP EAX
    170	    0062			     PRINT_ARR:
    171					       ; PUTL EMPTYS
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 4
mlab1.asm



    172	    0062  66| 8B 1E 02F2r	       MOV EBX,	COUNTER_STR_ARR
    173	    0067  66| A1 02FAr		       MOV EAX,	COUNTER_4_OUT
    174	    006B  66| 3B C3		       CMP EAX,	EBX
    175	    006E  0F 8D	0108		       JGE @@E
    176					       ;--------------------------
    177	    0072  E8 00CE		       CALL PRINT_HEX_COUNTER
    178
    179	    0075  66| 50		       PUSH EAX
    180	    0077  66| B8 0000003A	       MOV EAX,	':'
    181	    007D  E8 0000e		       CALL PUTC
    182	    0080  66| 58		       POP EAX
    183
    184	    0082  66| A1 02FAr		       MOV EAX,	COUNTER_4_OUT
    185	    0086  66| 8B 0E 02EEr	       MOV ECX,	WORD_LEN
    186	    008B  66| F7 E1		       MUL ECX
    187	    008E  66| 8D 36 0000r	       LEA ESI,	STR_ARR
    188	    0093  66| 03 F0		       ADD ESI,	EAX
    189	    0096  66| 33 C9		       XOR ECX,	ECX
    190	    0099  66| 33 D2		       XOR EDX,	EDX
    191	    009C  E8 0000e		       CALL PUTSS
    192
    193	    009F  66| A1 02FAr		       MOV EAX,	COUNTER_4_OUT
    194	    00A3  66| 40		       INC EAX
    195	    00A5  66| A3 02FAr		       MOV COUNTER_4_OUT, EAX
    196					       ;-----------------------------------
    197	    00A9  EB B7			       JMP PRINT_ARR
    198
    199
    200
    201
    202					   ; PUTL EMPTYS
    203					   ; LEA ESI, STR_ARR
    204					   ; CALL PUTSS
    205					   ;
    206					   ; PUTL EMPTYS
    207					   ; LEA ESI, STR_ARR
    208					   ; MOV EAX, WORD_LEN
    209					   ; ADD ESI, EAX
    210					   ; CALL PUTSS
    211
    212
    213
    214					   ;
    215					   ; XOR ECX, ECX
    216					   ; XOR EDX, EDX
    217					   ;
    218					   ; XOR EAX, EAX
    219					   ; MOV AL, A
    220					   ; MOV BX, 2
    221					   ; ADD BX, 0
    222					   ; MOV B[BX],	AL
    223					   ; INC AL
    224					   ;
    225					   ; ; lea bx, B
    226					   ; ; INC BX
    227					   ; ; MOV [BX], AL
    228					   ; ; ; MOV B + 1, AL
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 5
mlab1.asm



    229					   ; ; MOV AL, B
    230					   ; ; CALL PUTC
    231					   ; PUTL EMPTYS
    232					   ; MOV BX, 2
    233					   ; MOV AL, B[BX]
    234					   ; ; INC AL
    235					   ; CALL PUTC
    236					   ; ;
    237					   ; PUTL EMPTYS
    238					   ; LEA EDX, [MYBUF]
    239					   ; CALL GETS
    240					   ; PUTL EMPTYS
    241					   ; MOV AL, MYBUF[1]
    242					   ; ADD AL, 48
    243					   ; CALL PUTC
    244					   ; PUTL EMPTYS
    245					   ; MOV EAX, 4
    246					   ; ADD EAX, COUNTER2
    247					   ; ADD EAX, 48
    248					   ; CALL PUTC
    249					   ;
    250					   ; XOR ECX, ECX
    251					   ;
    252					   ; CMP AL, CHCR
    253					   ; JNE @@E
    254					   ; PUTL A
    255	    00AB  E9 00CC		   JMP @@E
    256
    257	    00AE			   TREAT_STR PROC NEAR
    258	    00AE  66| 33 C9		     XOR ECX, ECX
    259	    00B1  66| 33 C0		     XOR EAX, EAX
    260	    00B4  66| 33 D2		     xor edx, edx
    261	    00B7  66| 33 FF		     XOR EDI, EDI
    262	    00BA  66| 42		     INC EDX
    263	    00BC  8A 0E	0307r		     MOV CL, MYBUF[1]
    264	    00C0  80 C1	02		     ADD CL, 2
    265	    00C3  66| BB 00000002	     mov ebx, 2
    266	    00C9			     TREAT_CHAR:
    267	    00C9  8A 97	0306r		       MOV DL, MYBUF[BX]
    268	    00CD  3A D9			       CMP BL, CL
    269	    00CF  7D 56	90 90		       JGE GET_OUT
    270
    271	    00D3  80 FA	20		       CMP DL, ' '
    272	    00D6  74 32	90 90		       JE NEW_WORD
    273
    274	    00DA  80 FA	21		       CMP DL, '!' ; SIGN OF INPUT END
    275	    00DD  74 55	90 90		       JE OUT_OF_INPUT
    276
    277					       ;ESI - INDEX OF ARRAY, EDI - INDEX OF CHAR
    278	    00E1  66| 8B 36 02F2r	       MOV ESI,	COUNTER_STR_ARR
    279
    280	    00E6  66| 50		       PUSH EAX
    281	    00E8  66| 52		       PUSH EDX
    282	    00EA  66| A1 02EEr		       MOV EAX,	WORD_LEN
    283	    00EE  66| 8B 36 02F2r	       MOV ESI,	COUNTER_STR_ARR
    284	    00F3  66| F7 E6		       MUL ESI
    285	    00F6  66| 8B F0		       MOV ESI,	EAX
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 6
mlab1.asm



    286	    00F9  66| 5A		       POP EDX
    287	    00FB  66| 58		       POP EAX
    288
    289	    00FD  66| 03 F7		       ADD ESI,	EDI
    290	    0100  88 94	0000r		       MOV STR_ARR[SI],	DL ;ЗАПИСАТЬ СИМВОЛ
    291	    0104  66| 47		       INC EDI
    292
    293	    0106			       INCREAMENTING:
    294	    0106  66| 43			 INC EBX
    295	    0108  EB BF				 JMP TREAT_CHAR
    296
    297	    010A			       NEW_WORD:
    298	    010A  66| 8B 3E 02FEr		 MOV EDI, MAX_STR_ARR
    299	    010F  66| 8B 36 02F2r		 MOV ESI, COUNTER_STR_ARR
    300	    0114  66| 3B F7			 CMP ESI, EDI
    301	    0117  7D 0E	90 90			 JGE GET_OUT
    302	    011B  66| 46			 INC ESI
    303	    011D  66| 89 36 02F2r		 MOV COUNTER_STR_ARR, ESI
    304
    305	    0122  66| 33 FF			 XOR EDI, EDI
    306	    0125  EB DF				 JMP INCREAMENTING
    307
    308	    0127			     GET_OUT:
    309	    0127  66| 8B 36 02F2r	     MOV ESI, COUNTER_STR_ARR
    310	    012C  66| 46		     INC ESI
    311	    012E  66| 89 36 02F2r	     MOV COUNTER_STR_ARR, ESI
    312	    0133  C3			     RET
    313
    314	    0134			     OUT_OF_INPUT:
    315	    0134  66| 8B 36 02F2r	     MOV ESI, COUNTER_STR_ARR
    316	    0139  66| 46		     INC ESI
    317	    013B  66| 89 36 02F2r	     MOV COUNTER_STR_ARR, ESI
    318	    0140  E9 FF0F		     JMP OUTPUT
    319
    320	    0143			   TREAT_STR  ENDP
    321
    322
    323	    0143			   PRINT_HEX_COUNTER PROC NEAR ; EAX - NUMBER TO CONVERT
    324	    0143  66| 33 D2		      xor edx, edx
    325	    0146  66| 33 C9		      xor ecx, ecx
    326	    0149  66| BB 00000010	      mov ebx, 16
    327	    014F			      parse:
    328	    014F  66| 33 D2			  xor edx, edx
    329	    0152  66| F7 F3			  div ebx
    330	    0155  66| 52			  push edx
    331	    0157  66| 41			  inc ecx
    332	    0159  66| 83 F8 00			  cmp eax, 0
    333	    015D  7F F0				  jg parse
    334	    015F			      print_hex:
    335	    015F  66| 58			  pop eax
    336	    0161  66| 83 F8 0A			  cmp eax, 10
    337	    0165  7D 09	90 90			  jge isLetter
    338	    0169  66| 83 C0 30			  add eax, 48
    339	    016D  EB 05	90			  jmp print_hex_char
    340
    341	    0170				  isLetter:
    342	    0170  66| 83 C0 37			  add eax, 55
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 7
mlab1.asm



    343
    344	    0174				  print_hex_char:
    345	    0174  E8 0000e			  CALL PUTC
    346	    0177  E2 E6				  loop print_hex
    347	    0179  C3			     ret
    348	    017A			   PRINT_HEX_COUNTER ENDP
    349					  ;ввод	числа Х
    350					 ;   PUTL	 EMPTYS
    351					 ;   LEA ESI, INPUT_X_STR
    352					 ;   CALL PUTSS
    353					 ;
    354					 ;   ;записать EAX в X переменную
    355					 ;   LEA EDI, X
    356					 ;   CALL READ_NUM
    357					 ;   PUTL EMPTYS
    358					 ;   ; ВЫВОД В 10 ЧНОЙ ВИДЕ ЧИСЛА
    359					 ;   MOV EAX, X
    360					 ;   CALL PRINT_DEC
    361					 ;   PUTL EMPTYS
    362					 ;
    363					 ;   ;ввод числа У
    364					 ;   ; XOR EDI,	EDI
    365					 ;   LEA ESI, INPUT_Y_STR
    366					 ;   CALL PUTSS
    367					 ;  ;записать EAX в У переменную
    368					 ;   LEA EDI, Y
    369					 ;   CALL READ_NUM
    370					 ;   PUTL EMPTYS
    371					 ;
    372					 ;   ; ВЫВОД В 10 ЧНОЙ ВИДЕ ЧИСЛА
    373					 ;   MOV EAX, Y
    374					 ;   CALL PRINT_DEC
    375					 ;   PUTL EMPTYS
    376					 ;
    377					 ;   LEA ESI, FUNCTION
    378					 ;   CALL PUTSS
    379					 ;   LEA ESI, Z_STR
    380					 ;   CALL PUTSS
    381					 ;   LEA ESI, Z3
    382					 ;   CALL PUTSS
    383					 ;   LEA ESI, Z2
    384					 ;   CALL PUTSS
    385					 ;   LEA ESI, Z7
    386					 ;   CALL PUTSS
    387					 ;
    388					 ;   ;-------------------------------------------------
    389					 ;   ; начало подсчета
    390					 ;   ; берем х1-х4 биты
    391					 ;   MOV EAX, X
    392					 ;   AND EAX, 11110b ;маска на х1-х4 бита
    393					 ;
    394					 ;   ;СРАВНИТЬ Х1-Х4 БИТА НА СООТВЕТСТВИЕ ЛЖИ ИЗ ТАБЛИЧНЫХ
    395					 ;   CMP EAX, 100b
    396					 ;   JE	FALSE
    397					 ;   CMP EAX, 1100b
    398					 ;   JE	FALSE
    399					 ;   CMP EAX, 10b
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 8
mlab1.asm



    400					 ;   JE	FALSE
    401					 ;   CMP EAX, 10010b
    402					 ;   JE	FALSE
    403					 ;   CMP EAX, 110b
    404					 ;   JE	FALSE
    405					 ;   ; ИНАЧЕ ПРЫЖОК НА ВЫОПЛЕНИЕ ЕСЛИ ЗНАЧЕНИЕ ИСТИНА ИЗ ТАБИЛЦЫ
    406					 ;   JMP TRUE
    407					 ;
    408					 ; ; вычисление	Z если истинна или ложь	соответственно
    409					 ; TRUE:
    410					 ;   LEA ESI, F1
    411					 ;   CALL PUTSS
    412					 ;   MOV EAX, X
    413					 ;   SHR EAX, 2
    414					 ;   MOV EBX, Y
    415					 ;   SHL EBX, 2
    416					 ;   ADD EAX, EBX
    417					 ;   MOV Z, EAX
    418					 ;   JMP CHANGE_Z
    419					 ; FALSE:
    420					 ;   LEA ESI, F0
    421					 ;   CALL PUTSS
    422					 ;   MOV EAX, X
    423					 ;   SHR EAX, 3
    424					 ;   MOV EBX, Y
    425					 ;   SUB EAX, EBX
    426					 ;   MOV Z, EAX
    427					 ;
    428					 ;
    429					 ;
    430					 ; CHANGE_Z:
    431					 ;   XOR ECX, ECX
    432					 ;   XOR EDX, EDX
    433					 ;   LEA ESI, Z_BEFORE_DEC
    434					 ;   CALL PUTSS
    435					 ;   MOV EAX, Z
    436					 ;   CALL PRINT_DEC
    437					 ;   PUTL EMPTYS
    438					 ;   PUTL EMPTYS
    439					 ;
    440					 ;   XOR ECX, ECX
    441					 ;   XOR EDX, EDX
    442					 ;   LEA ESI, Z_BEFORE_BIN
    443					 ;   CALL PUTSS
    444					 ;   MOV EAX, Z
    445					 ;   CALL PRINT_BIN
    446					 ;   PUTL EMPTYS
    447					 ;   PUTL EMPTYS
    448					 ;
    449					 ;
    450					 ;
    451					 ;   ; ИЗМЕНЕНИЕ 3 БИТА
    452					 ;   MOV EAX, Z
    453					 ;   XOR EAX, 1000b ; ИНВЕРСИЯ 3 БИТА
    454					 ;
    455					 ;   ;----------------------------------------
    456					 ;   ;ИЗМЕНЕНИЕ	7 БИТА
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 9
mlab1.asm



    457					 ;
    458					 ;   MOV EBX, EAX
    459					 ;   AND EBX, 10000000b	   ; МАСКА 7 БИТА
    460					 ;   SHR EBX, 7	   ; В EBX ЗНАЧЕНИЕ БИТА Z7
    461					 ;
    462					 ;   MOV ECX, EAX
    463					 ;   AND ECX, 100000000b    ; МАСКА 8 БИТА
    464					 ;   SHR ECX, 8	   ; В EBX ЗНАЧЕНИЕ БИТА Z8
    465					 ;
    466					 ;   AND EBX, ECX  ; ВЫЧИСЛЕНИЕ	Z7&=Z8
    467					 ;   SHL EBX, 7	   ; ВЫДВИГАЕМ ЗНАЧЕНИЕ	ОПЕРАЦИИ В ПОЗИЦИЮ Z7
    468					 ;   CMP EBX, 0
    469					 ;   JE	WRITE_0_Z7
    470					 ;   WRITE_1_Z7:
    471					 ;   OR	EAX, EBX  ; ЗАНЕСЕНИЕ РЕЗУЛЬТАТА EBX В EAX
    472					 ;   JMP CNT
    473					 ;   WRITE_0_Z7:
    474					 ;   OR	EBX, 10000000b	; СТАВИМ В EBX НА 7 БИТ	ЕДИНИЦУ
    475					 ;   NOT EBX
    476					 ;   AND EAX, EBX ; ЗАНЕСЕНИЕ РЕЗУЛЬТАТА EBX В EAX
    477					 ;
    478					 ;   CNT:
    479					 ;
    480					 ;   ;----------------------------------------
    481					 ;   ; ИЗМЕНЕНИЕ 2 БИТА
    482					 ;   MOV EBX, EAX
    483					 ;   AND EBX, 100b  ; маска 2 бита
    484					 ;   SHR EBX, 2	   ; В EBX ЗНАЧЕНИЕ БИТА Z2
    485					 ;
    486					 ;   MOV ECX, EAX
    487					 ;   AND ECX, 10000000000000000000b   ;	маска 19 бита
    488					 ;   SHR ECX, 19   ; В ECX ЗНАЧЕНИЕ БИТА Z19
    489					 ;
    490					 ;   OR	EBX, ECX  ; ВЫЧИСЛЕНИЕ Z2|=Z19
    491					 ;   SHL EBX, 2	   ; ВЫДВИГАЕМ ЗНАЧЕНИЕ	ОПЕРАЦИИ В ПОЗИЦИЮ Z2
    492					 ;   OR	EAX, EBX  ; ЗАНЕСЕНИЕ РЕЗУЛЬТАТА EBX В EAX
    493					 ;
    494					 ;
    495					 ;   MOV Z, EAX
    496					 ;
    497					 ;   XOR ECX, ECX
    498					 ;   XOR EDX, EDX
    499					 ;   LEA ESI, Z_AFTER_DEC
    500					 ;   CALL PUTSS
    501					 ;   MOV EAX, Z
    502					 ;   CALL PRINT_DEC
    503					 ;   PUTL EMPTYS
    504					 ;   PUTL EMPTYS
    505					 ;
    506					 ;
    507					 ;   XOR ECX, ECX
    508					 ;   XOR EDX, EDX
    509					 ;   LEA ESI, Z_AFTER_BIN
    510					 ;   CALL PUTSS
    511					 ;   MOV EAX, Z
    512					 ;   CALL PRINT_BIN
    513					 ;   PUTL EMPTYS
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 10
mlab1.asm



    514					 ;   PUTL EMPTYS
    515					 ;
    516					 ;
    517					 ; JMP @@E
    518					 ;
    519					 ; ERROR_NUM:
    520					 ;   PUTL EMPTYS
    521					 ;   LEA ESI, ERROR_NUM_STR
    522					 ;   XOR EAX, EAX
    523					 ;   XOR EDX, EDX
    524					 ;   XOR ECX, ECX
    525					 ;   CALL PUTSS
    526					 ;   JMP @@E
    527					 ;
    528					 ; ; RESULT IN EAX , STRING WITH BINARY	NUMBER IN MYBUFF
    529					 ; READ_NUM PROC NEAR
    530					 ;   LEA EDX, [MYBUF]
    531					 ;   CALL GETS
    532					 ;   xor eax, eax
    533					 ;   xor ebx, ebx
    534					 ;   ADD EDX, 1
    535					 ;   MOV CL, [EDX]
    536					 ;   ADD EDX, 1
    537					 ;   l1:
    538					 ;	mov bl,	[EDX]
    539					 ;	sub bl,	48
    540					 ;	CMP BL,	0
    541					 ;	JE CONTINUE
    542					 ;	CMP BL,	1
    543					 ;	JNE ERROR_NUM
    544					 ;	CONTINUE:
    545					 ;	  add EAX, EBX
    546					 ;	  shl EAX, 1
    547					 ;	  inc EDX
    548					 ;	 LOOP L1
    549					 ;   shr EAX,1
    550					 ; ; PUT EAX VALUE INTO	VARIABLE WITH EDI ADDRESS
    551					 ;   MOV [EDI],	EAX
    552					 ;   RET
    553					 ; READ_NUM ENDP
    554					 ;
    555					 ; ; WRITE DEC NUMBER FROM EAX
    556					 ; PRINT_DEC PROC NEAR
    557					 ;   ; PUSH EAX
    558					 ;   ; PUTL EMPTYS
    559					 ;   ; POP EAX
    560					 ;   MOV EBX, 10
    561					 ;   XOR ECX, ECX
    562					 ;   DIVISION:
    563					 ;     XOR EDX,	EDX
    564					 ;     DIV EBX
    565					 ;     ADD EDX,	48
    566					 ;     push EDX
    567					 ;     ADD ECX,	1
    568					 ;     CMP EAX,	0
    569					 ;     JG DIVISION
    570					 ;   PRINT:
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 11
mlab1.asm



    571					 ;     XOR EAX,	EAX
    572					 ;     POP EAX
    573					 ;     CALL PUTC
    574					 ;     LOOP PRINT
    575					 ;     RET
    576					 ;   PRINT_DEC ENDP
    577					 ;
    578					 ;   ; WRITE DEC NUMBER	FROM EAX
    579					 ;   PRINT_BIN PROC NEAR
    580					 ;     ; PUSH EAX
    581					 ;     ; PUTL EMPTYS
    582					 ;     ; POP EAX
    583					 ;     MOV EBX,	2
    584					 ;     XOR ECX,	ECX
    585					 ;     DIVISION_BIN:
    586					 ;	 XOR EDX, EDX
    587					 ;	 DIV EBX
    588					 ;	 ADD EDX, 48
    589					 ;	 push EDX
    590					 ;	 ADD ECX, 1
    591					 ;	 CMP EAX, 0
    592					 ;	 JG DIVISION_BIN
    593					 ;     MOV EBX,	ECX
    594					 ;     SUB EBX,	20
    595					 ;     PRINT_ZEROS:
    596					 ;	 MOV AL, '0'
    597					 ;	 CALL PUTC
    598					 ;	 INC EBX
    599					 ;	 CMP EBX, 0
    600					 ;	 JL PRINT_ZEROS
    601					 ;     PRINT_B:
    602					 ;	 XOR EAX, EAX
    603					 ;	 POP EAX
    604					 ;	 CALL PUTC
    605					 ;	 LOOP PRINT_B
    606					 ;	 RET
    607					 ;     PRINT_BIN ENDP
    608
    609						 ; Выход из программы
    610	    017A			 @@E:	 EXIT
1   611	    017A  B4 4C				 MOV	 AH, FUEXIT
1   612	    017C  B0 00				 MOV	 AL, 0
1   613	    017E  CD 21				 INT	 DOSFU
    614						 EXTRN	 PUTSS:	 NEAR
    615						 EXTRN	 PUTC:	 NEAR
    616						 EXTRN	 GETCH:	 NEAR
    617						 EXTRN	 GETS:	 NEAR
    618						 EXTRN	 SLEN:	 NEAR
    619						 EXTRN	 UTOA10: NEAR
    620						 END	 BEGIN
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 12
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/20/21"
??FILENAME			  Text	 "mlab1	  "
??TIME				  Text	 "07:54:48"
??VERSION			  Number 0205
@@E				  Near	 _TEXT:017A
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0D0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MLAB1
@MODEL				  Text	 2
@WORDSIZE			  Text	 2
A				  Byte	 DGROUP:0307
B				  Byte	 DGROUP:030C
BEGIN				  Near	 _TEXT:0000
CHCOMMA				  Number 0060
CHCR				  Number 000D
CHESC				  Number 001B
CHLF				  Number 000A
CHSEP				  Number 003D
COUNTER_4_OUT			  Dword	 DGROUP:02FA
COUNTER_LINE			  Dword	 DGROUP:02F6
COUNTER_STR_ARR			  Dword	 DGROUP:02F2
DOSFU				  Number 0021
EM				  Byte	 DGROUP:0353
EMPTYS				  Byte	 DGROUP:0352
FUEXIT				  Number 004C
FUGETCH				  Number 0008
FUGETS				  Number 000A
FUPUTC				  Number 0002
GETCH				  Near	 _TEXT:---- Extern
GETS				  Near	 _TEXT:---- Extern
GET_OUT				  Near	 _TEXT:0127
INCREAMENTING			  Near	 _TEXT:0106
INPUT				  Byte	 DGROUP:03D3
ISLETTER			  Near	 _TEXT:0170
LENNUM				  Number 0012
LENPACK				  Number 0009
MAX_STR				  Dword	 DGROUP:0302
MAX_STR_ARR			  Dword	 DGROUP:02FE
MYBUF				  Byte	 DGROUP:0306
NEW_WORD			  Near	 _TEXT:010A
OUTPUT				  Near	 _TEXT:0052
OUT_OF_INPUT			  Near	 _TEXT:0134
PARSE				  Near	 _TEXT:014F
PAUSE_H				  Number 0000
PAUSE_L				  Number 0000
PRINT_ARR			  Near	 _TEXT:0062
PRINT_HEX			  Near	 _TEXT:015F
PRINT_HEX_CHAR			  Near	 _TEXT:0174
PRINT_HEX_COUNTER		  Near	 _TEXT:0143
PUTC				  Near	 _TEXT:---- Extern
Turbo Assembler	 Version 2.51	     04/20/21 07:54:48	    Page 13
Symbol Table



PUTSS				  Near	 _TEXT:---- Extern
SLEN				  Near	 _TEXT:---- Extern
STR_ARR				  Byte	 DGROUP:0000
TREAT_CHAR			  Near	 _TEXT:00C9
TREAT_LINE			  Near	 _TEXT:0013
TREAT_STR			  Near	 _TEXT:00AE
UTOA10				  Near	 _TEXT:---- Extern
WORD_LEN			  Dword	 DGROUP:02EE

Macro Name

DURAT
EXIT
FIXTIME
PUTL
PUTLS
PUTLSC

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0200 Para	  Stack	  STACK
  _DATA				  16  03F5 Word	  Public  DATA
_TEXT				  16  0180 Word	  Public  CODE
